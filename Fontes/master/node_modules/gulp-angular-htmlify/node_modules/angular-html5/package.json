{
  "name": "angular-html5",
  "version": "2.2.1",
  "description": "Change your ng-attributes to data-ng-attributes for html5 validation",
  "repository": {
    "type": "git",
    "url": "pgilad/angular-html5"
  },
  "license": "MIT",
  "author": {
    "name": "Gilad Peleg",
    "email": "giladp007@gmail.com",
    "url": "http://giladpeleg.com"
  },
  "bin": {
    "angular-html5": "./bin/angular-html5.js"
  },
  "main": "index.js",
  "files": [
    "bin",
    "index.js"
  ],
  "engines": {
    "node": ">=0.10.0"
  },
  "scripts": {
    "watch": "mocha -R spec --watch ./tests/test.js",
    "test": "mocha -R spec ./tests/test.js"
  },
  "keywords": [
    "angular",
    "w3c",
    "validator",
    "html5",
    "data-ng",
    "ng",
    "valid"
  ],
  "devDependencies": {
    "js-beautify": "^1.5.4",
    "mocha": "*",
    "should": "*"
  },
  "dependencies": {
    "cheerio": "^0.18.0",
    "commander": "^2.5.1",
    "get-stdin": "^3.0.2",
    "log-symbols": "^1.0.1"
  },
  "readme": "# angular-html5\n\n> Change your ng-attributes to data-ng-attributes for HTML5 validation\n\n[![NPM Version](http://img.shields.io/npm/v/angular-html5.svg?style=flat)](https://npmjs.org/package/angular-html5)\n[![NPM Downloads](http://img.shields.io/npm/dm/angular-html5.svg?style=flat)](https://npmjs.org/package/angular-html5)\n[![Build Status](http://img.shields.io/travis/pgilad/angular-html5.svg?style=flat)](https://travis-ci.org/pgilad/angular-html5)\n\nEver tried to run an Angular HTML page into w3c validator? Yeah it's a mess.\n\nHTML5 has a preset definition of valid tag elements, and also allows data-attributes.\nAngular, being as great as it is, allows you set set custom directives, that don't pass the\nw3c validations. Angular default directives come with an option to be named `data-something`.\n\nIf you are like me, it isn't fun using `data-ng-include` or `data-ng-switch` and prefer to use the shorter\nversions. Using this module, you can easily convert the HTML attributes of Angular (and custom prefixes you want) to\nvalid HTML5 tags that start with `data-something`.\n\n**Turn this:**\n```html\n<html ng-app=\"myApp\">\n...\n<body ng-controller=\"MainCtrl\">\n</body>\n</html>\n```\n\n**Into this:**\n```html\n<html data-ng-app=\"myApp\">\n...\n<body data-ng-controller=\"MainCtrl\">\n</body>\n</html>\n```\n#### <img src=\"http://www.w3.org/html/logo/downloads/HTML5_Logo_256.png\" alt=\"HTML5 Valid\" width=\"64\" height=\"64\"/>\n\n**angular-html5** looks for `ng-` directives by default and can handle the following cases:\n```html\n<!-- attribute -->\n<ANY ng-directive>\n<!-- regular element -->\n<ng-directive></ng-directive>\n<!-- self closing element -->\n<ng-directive />\n<!-- custom directive prefix -->\n<ui-router></ui-router>\n<!-- your name prefix -->\n<gilad-cool-loader></gilad-cool-loader>\n```\n\nYou can add additional prefixes using the option `customPrefixes`.\n\nThis plugin plays nice with `type=\"text/ng-template\"` and won't break it.\n\n## Install\n\n### Global\n\n```bash\n$ npm install --global angular-html5\n```\n\n### Usage\n\n```bash\n❯ angular-html5 --help\n\n  Usage: angular-html5 [options] <file>\n\n  Options:\n\n    -h, --help                      output usage information\n    -V, --version                   output the version number\n    -c, --custom-prefix [prefixes]  Optionally add custom prefixes to the list of converted directives.\n\n  Examples:\n\n    $ angular-html5 index.js\n    $ angular-html5 --custom-prefix ui --custom-prefix gijo index.js > ./dist/index.js\n    $ cat index.js | angular-html5 > ./dist/index.js\n```\n\n### Programmatic\n\nInstall with [npm](https://npmjs.org/package/angular-html5)\n\n```bash\n$ npm install --save-dev angular-html5\n```\n\n### Usage\n\n```js\nvar htmlify = require('angular-html5')();\n\nvar str = fs.readFileSync('angular.html').toString();\n\nvar needsReplace = htmlify.test(str); //--> true if ng-attributes exist in file\nif (needsReplace) {\n    str = htmlify.replace(str); //--> returns the modified string with transformed attributes\n}\n```\n\n## Usage in build tools\n\n#### [Gulp](https://github.com/gulpjs/gulp) - See [gulp-angular-htmlify](https://github.com/pgilad/gulp-angular-htmlify)\n\n#### [Grunt](http://gruntjs.com/) - See [grunt-angular-htmlify](https://github.com/pgilad/grunt-angular-htmlify)\n\n#### [Broccoli](https://github.com/broccolijs/broccoli) - ??\n\n## API\n\n```js\nvar htmlify = require('angular-html5')(params);\n```\n\n### API Methods\n\n#### .test(str)\n\nTest whether a string containing HTML has `ng-attributes` that can be transformed\nto `data-ng-attributes`.\n\n**Usage**: `htmlify.test(str)`\n\n**Accepts**: `string`\n\n**Returns**: `Boolean`\n\n#### .replace(str)\n\nReturn a transformed string that contains `data-ng-attributes` or relevant transformed attributes\nfor `customPrefixes`.\n\n**Usage**: `htmlify.replace(str)`\n\n**Accepts**: `string`\n\n**Returns**: `string`\n\n### API Params\n\n`params` is an object that contains the following settings:\n\n#### customPrefixes\n\n**Type**: `Array`\n\n**Default**: `[ ]`\n\nAn array to optionally add custom prefixes to the list of converted directives.\n\nFor example: `['ui-', 'gijo-']`\n\nBy default only `ng-` prefixes are are handled. Any items you add here will be handled as well.\n\n*Note: for this to work - you will need to make sure your directives can load with a `data-` prefix.*\n\n**Example Usage:**\n```js\nvar str = require('angular-html5')({customPrefixes: ['ui-']}).replace(oldStr);\n```\n\n## License\n\nMIT ©[Gilad Peleg](http://giladpeleg.com)\n",
  "readmeFilename": "README.md",
  "_id": "angular-html5@2.2.1",
  "dist": {
    "shasum": "4eb9ec1007efc8dd8128986cf0aebea67a067f62"
  },
  "_from": "angular-html5@^2.2.1",
  "_resolved": "https://registry.npmjs.org/angular-html5/-/angular-html5-2.2.1.tgz"
}
